Newsgroups: sci.electronics
Path: cantaloupe.srv.cs.cmu.edu!crabapple.srv.cs.cmu.edu!bb3.andrew.cmu.edu!news.sei.cmu.edu!cis.ohio-state.edu!zaphod.mps.ohio-state.edu!sdd.hp.com!decwrl!apple!mumbo.apple.com!gallant.apple.com!NewsWatcher!user
From: alan@apple.com (Alan Mimms)
Subject: Re: UART needed (really BREAK detect)
Sender: news@gallant.apple.com
Message-ID: <alan-230493165217@17.129.12.26>
Date: Fri, 23 Apr 1993 23:52:33 GMT
References: <jam.19.735404158@ameslab.gov> <alan-210493163447@17.129.12.26> <3402@tau-ceti.isc-br.com>
Organization: Apple Computer, Inc.
Followup-To: sci.electronics
Lines: 43

#reply#In article <3402@tau-ceti.isc-br.com>, jimc@tau-ceti.isc-br.com (Jim
#reply#Cathey) wrote:
#reply#> 
#reply#> In article <alan-210493163447@17.129.12.26> alan@apple.com (Alan Mimms) writes:
#reply#> >Actually detecting a BREAK is done by watching for a "character" containing
#reply#> >all zero bits with the framing error resulting from its receipt.  This
#reply#> 
#reply#> True enough, but...
#reply#> 
#reply#> >means that the line stayed in the zero bit state even past the stop bit
#reply#> >time slot, which basically indicates a BREAK.  There is no special way to
#reply#> >detect BREAK that I have found other than this -- there's no magic signal
#reply#> >generated by UARTs, etc.
#reply#> 
#reply#> Zilog SCC:
#reply#> ---------
#reply#> 	RR0[7]:  Break Detect
#reply#> 
#reply#> This is a very popular part, but it has a number of quirks, especially
#reply#> in HDLC mode.
#reply#> 
#reply#> Signetics 68562 DUSCC:
#reply#> ---------------------
#reply#> 	RSR[2]:  Break Start Detect
#reply#> 	RSR[3]:  Break End Detect
#reply#> 
#reply#> Two of the bits in the Receiver Status Register.  You can enable an interrupt
#reply#> on either of these bits going high, too.  Also, only one NULL will be put
#reply#> in the FIFO per break detected.
#reply#> 
#reply#> This is simply the best serial chip I've ever worked with.  _Many_ less
#reply#> quirks than the SCC, which is IMHO second-best.  (Death to 8250 devices!)
#reply#> 

And I thought I knew a lot about serial devices.  Perhaps I should just
keep my big mouth shut.  Sorry.

#sig# Alan Mimms (alan@apple.com, ...!apple!alan)   | My opinions are generally
#sig# Portable Macintosh Software Group             | pretty worthless, but
#sig# Apple Computer                                | they *are* my own...
#sig# Art without engineering is dreaming.  Engineering without art is
#sig# calculating.
#sig# 	-- Steven K. Roberts in "Computing Across America"
